
./Setup.hs,161
module Main (main)0,1
main ::11,12
main =12,13
withCurrentDirectory ::17,18
withCurrentDirectory path18,19
runTestScript ::23,24
runTestScript _args24,25

./Data/Time/LocalTime.hs,31
module Data.Time.LocalTime0,1

./Data/Time/Calendar.hs,30
module Data.Time.Calendar0,1

./Data/Time/Format.hs,191
module Data.Time.Format0,1
class FormatTime t22,23
	formatCharacter ::23,24
formatChar ::25,26
formatChar '%'26,27
formatTime ::148,149
formatTime _149,150
instance FormatTime158,159

./Data/Time/Clock.hs,74
module Data.Time.Clock1,2
getCurrentTime ::16,17
getCurrentTime =17,18

./Data/Time/Format/Parse.hs,1422
module Data.Time.Format.Parse 4,5
char ::35,36
char c36,37
string ::38,39
string this39,40
up ::46,47
up =47,48
class ParseTime t52,53
    buildTime ::58,59
parseTime ::73,74
parseTime l79,80
readTime ::85,86
readTime l90,91
readsTime ::96,97
readsTime l100,101
data Padding =107,108
data Padding = NoPadding |107,108
data Padding = NoPadding | SpacePadding |107,108
data Padding = NoPadding | SpacePadding | ZeroPadding107,108
type DateFormat =110,111
data DateFormatSpec =112,113
data DateFormatSpec = Value (Maybe112,113
                     | WhiteSpace113,114
                     | Literal Char114,115
parseFormat ::117,118
parseFormat l118,119
parseInput ::138,139
parseInput l139,140
parseValue ::145,146
parseValue l146,147
data DayComponent =207,208
data DayComponent = Year Integer207,208
                  | Century Integer208,209
                  | Month Int209,210
                  | Day Int210,211
                  | YearDay Int211,212
                  | WeekDay Int212,213
                  | Week WeekType213,214
data WeekType =215,216
data WeekType = ISOWeek |215,216
data WeekType = ISOWeek | SundayWeek |215,216
data WeekType = ISOWeek | SundayWeek | MondayWeek215,216
instance ParseTime217,218
rpad ::303,304
rpad n304,305
mkPico ::306,307
mkPico i307,308
readTzOffset ::364,365
readTzOffset str365,366
_TIMEZONES_ ::375,376
_TIMEZONES_ =376,377

./Data/Time/Calendar/Days.hs,292
module Data.Time.Calendar.Days3,4
newtype Day =17,18
newtype Day = ModifiedJulianDay {toModifiedJulianDay17,18
newtype Day = ModifiedJulianDay {toModifiedJulianDay :: Integer}17,18
instance NFData25,26
addDays ::49,50
addDays n50,51
diffDays ::52,53
diffDays (ModifiedJulianDay53,54

./Data/Time/Calendar/Julian.hs,607
module Data.Time.Calendar.Julian0,1
toJulian ::18,19
toJulian date19,20
fromJulian ::25,26
fromJulian year26,27
fromJulianValid ::30,31
fromJulianValid year31,32
showJulian ::36,37
showJulian date37,38
julianMonthLength ::41,42
julianMonthLength year42,43
rolloverMonths ::44,45
rolloverMonths (y,m)45,46
addJulianMonths ::47,48
addJulianMonths n48,49
addJulianMonthsClip ::54,55
addJulianMonthsClip n55,56
addJulianMonthsRollOver ::60,61
addJulianMonthsRollOver n61,62
addJulianYearsClip ::66,67
addJulianYearsClip n67,68
addJulianYearsRollOver ::71,72
addJulianYearsRollOver n72,73

./Data/Time/Calendar/Easter.hs,298
module Data.Time.Calendar.Easter0,1
sundayAfter ::13,14
sundayAfter day14,15
orthodoxPaschalMoon ::17,18
orthodoxPaschalMoon year18,19
orthodoxEaster ::23,24
orthodoxEaster =24,25
gregorianPaschalMoon ::27,28
gregorianPaschalMoon year28,29
gregorianEaster ::34,35
gregorianEaster =35,36

./Data/Time/Calendar/MonthDay.hs,442
module Data.Time.Calendar.MonthDay0,1
monthAndDayToDayOfYear ::9,10
monthAndDayToDayOfYear isLeap10,11
monthAndDayToDayOfYearValid ::18,19
monthAndDayToDayOfYearValid isLeap19,20
dayOfYearToMonthAndDay ::30,31
dayOfYearToMonthAndDay isLeap31,32
findMonthDay ::33,34
findMonthDay (n:ns)34,35
monthLength ::39,40
monthLength isLeap40,41
monthLength' ::42,43
monthLength' isLeap43,44
monthLengths ::45,46
monthLengths isleap46,47

./Data/Time/Calendar/Gregorian.hs,690
module Data.Time.Calendar.Gregorian3,4
toGregorian ::23,24
toGregorian date24,25
fromGregorian ::30,31
fromGregorian year31,32
fromGregorianValid ::35,36
fromGregorianValid year36,37
showGregorian ::41,42
showGregorian date42,43
gregorianMonthLength ::46,47
gregorianMonthLength year47,48
rolloverMonths ::49,50
rolloverMonths (y,m)50,51
addGregorianMonths ::52,53
addGregorianMonths n53,54
addGregorianMonthsClip ::59,60
addGregorianMonthsClip n60,61
addGregorianMonthsRollOver ::65,66
addGregorianMonthsRollOver n66,67
addGregorianYearsClip ::71,72
addGregorianYearsClip n72,73
addGregorianYearsRollOver ::76,77
addGregorianYearsRollOver n77,78
instance Show80,81

./Data/Time/Calendar/WeekDate.hs,248
module Data.Time.Calendar.WeekDate where1,2
toWeekDate ::10,11
toWeekDate date@(ModifiedJulianDay11,12
fromWeekDate ::28,29
fromWeekDate y29,30
fromWeekDateValid ::37,38
fromWeekDateValid y38,39
showWeekDate ::50,51
showWeekDate date51,52

./Data/Time/Calendar/JulianYearDay.hs,366
module Data.Time.Calendar.JulianYearDay1,2
toJulianYearAndDay ::12,13
toJulianYearAndDay (ModifiedJulianDay13,14
fromJulianYearAndDay ::23,24
fromJulianYearAndDay year24,25
fromJulianYearAndDayValid ::30,31
fromJulianYearAndDayValid year31,32
showJulianYearAndDay ::39,40
showJulianYearAndDay date40,41
isJulianLeapYear ::44,45
isJulianLeapYear year45,46

./Data/Time/Calendar/OrdinalDate.hs,681
module Data.Time.Calendar.OrdinalDate where1,2
toOrdinalDate ::8,9
toOrdinalDate (ModifiedJulianDay9,10
fromOrdinalDate ::23,24
fromOrdinalDate year24,25
fromOrdinalDateValid ::30,31
fromOrdinalDateValid year31,32
showOrdinalDate ::39,40
showOrdinalDate date40,41
isLeapYear ::44,45
isLeapYear year45,46
mondayStartWeek ::50,51
mondayStartWeek date51,52
sundayStartWeek ::59,60
sundayStartWeek date60,61
fromMondayStartWeek ::69,70
fromMondayStartWeek y74,75
fromMondayStartWeekValid ::81,82
fromMondayStartWeekValid year86,87
fromSundayStartWeek ::100,101
fromSundayStartWeek y105,106
fromSundayStartWeekValid ::112,113
fromSundayStartWeekValid year117,118

./Data/Time/Calendar/Private.hs,359
module Data.Time.Calendar.Private where1,2
type NumericPadOption =5,6
pad1 ::7,8
pad1 (Just8,9
show2Fixed ::11,12
show2Fixed opt12,13
show2 ::15,16
show2 opt16,17
show3 ::23,24
show3 opt24,25
show4 ::31,32
show4 opt32,33
mod100 ::39,40
mod100 x40,41
div100 ::42,43
div100 x43,44
clip ::45,46
clip a46,47
clipValid ::50,51
clipValid a51,52

./Data/Time/LocalTime/TimeOfDay.hs,710
module Data.Time.LocalTime.TimeOfDay3,4
data TimeOfDay =23,24
data TimeOfDay = TimeOfDay {23,24
	todHour    ::25,26
	todMin     ::27,28
	todSec     ::30,31
instance NFData41,42
midnight ::48,49
midnight =49,50
midday ::52,53
midday =53,54
makeTimeOfDayValid ::58,59
makeTimeOfDayValid h59,60
utcToLocalTimeOfDay ::66,67
utcToLocalTimeOfDay zone67,68
localToUTCTimeOfDay ::72,73
localToUTCTimeOfDay zone73,74
posixDayLength ::75,76
posixDayLength =76,77
timeToTimeOfDay ::80,81
timeToTimeOfDay dt81,82
timeOfDayToTime ::90,91
timeOfDayToTime (TimeOfDay91,92
dayFractionToTimeOfDay ::94,95
dayFractionToTimeOfDay df95,96
timeOfDayToDayFraction ::98,99
timeOfDayToDayFraction tod99,100

./Data/Time/LocalTime/LocalTime.hs,693
module Data.Time.LocalTime.LocalTime4,5
data LocalTime =29,30
data LocalTime = LocalTime {29,30
	localDay    ::30,31
	localTimeOfDay   ::31,32
instance NFData42,43
utcToLocalTime ::52,53
utcToLocalTime tz53,54
localTimeToUTC ::57,58
localTimeToUTC tz58,59
ut1ToLocalTime ::62,63
ut1ToLocalTime long63,64
localTimeToUT1 ::69,70
localTimeToUT1 long70,71
data ZonedTime =73,74
data ZonedTime = ZonedTime {73,74
	zonedTimeToLocalTime ::74,75
	zonedTimeZone ::75,76
utcToZonedTime ::91,92
utcToZonedTime zone92,93
zonedTimeToUTC ::94,95
zonedTimeToUTC (ZonedTime95,96
getZonedTime ::104,105
getZonedTime =105,106
utcToLocalZonedTime ::111,112
utcToLocalZonedTime t112,113

./Data/Time/LocalTime/TimeZone.hs,618
module Data.Time.LocalTime.TimeZone5,6
data TimeZone =28,29
data TimeZone = TimeZone {28,29
	timeZoneMinutes ::30,31
	timeZoneSummerOnly ::32,33
	timeZoneName ::34,35
instance NFData43,44
minutesToTimeZone ::50,51
minutesToTimeZone m51,52
hoursToTimeZone ::54,55
hoursToTimeZone i55,56
showT ::57,58
showT opt58,59
timeZoneOffsetString' ::61,62
timeZoneOffsetString' opt62,63
timeZoneOffsetString ::66,67
timeZoneOffsetString =67,68
utc ::74,75
utc =75,76
posixToCTime ::80,81
posixToCTime  =81,82
getTimeZone ::84,85
getTimeZone time85,86
getCurrentTimeZone ::97,98
getCurrentTimeZone =98,99

./Data/Time/Clock/UTC.hs,232
module Data.Time.Clock.UTC3,4
data UTCTime =29,30
data UTCTime = UTCTime {29,30
	utctDay ::31,32
	utctDayTime ::33,34
instance NFData43,44
newtype NominalDiffTime =63,64
newtype NominalDiffTime = MkNominalDiffTime Pico63,64

./Data/Time/Clock/POSIX.hs,446
module Data.Time.Clock.POSIX2,3
posixDayLength ::20,21
posixDayLength =21,22
type POSIXTime =27,28
unixEpochDay ::29,30
unixEpochDay =30,31
posixSecondsToUTCTime ::32,33
posixSecondsToUTCTime i33,34
utcTimeToPOSIXSeconds ::37,38
utcTimeToPOSIXSeconds (UTCTime38,39
getPOSIXTime ::42,43
getPOSIXTime =50,51
win32_epoch_adjust ::54,55
win32_epoch_adjust =55,56
ctimevalToPosixSeconds ::60,61
ctimevalToPosixSeconds (MkCTimeval61,62

./Data/Time/Clock/TAI.hs,629
module Data.Time.Clock.TAI3,4
newtype AbsoluteTime =28,29
newtype AbsoluteTime = MkAbsoluteTime {unAbsoluteTime28,29
newtype AbsoluteTime = MkAbsoluteTime {unAbsoluteTime :: DiffTime}28,29
instance NFData38,39
taiEpoch ::48,49
taiEpoch =49,50
addAbsoluteTime ::52,53
addAbsoluteTime t53,54
diffAbsoluteTime ::56,57
diffAbsoluteTime (MkAbsoluteTime57,58
type LeapSecondTable =62,63
utcDayLength ::64,65
utcDayLength table65,66
dayStart ::67,68
dayStart table68,69
utcToTAITime ::70,71
utcToTAITime table71,72
taiToUTCTime ::74,75
taiToUTCTime table75,76
parseTAIUTCDATFile ::84,85
parseTAIUTCDATFile ss85,86

./Data/Time/Clock/CTimeval.hs,166
module Data.Time.Clock.CTimeval where1,2
data CTimeval =9,10
data CTimeval = MkCTimeval CLong9,10
instance Storable11,12
getCTimeval ::25,26
getCTimeval =26,27

./Data/Time/Clock/UTCDiff.hs,117
module Data.Time.Clock.UTCDiff where1,2
addUTCTime ::7,8
addUTCTime x8,9
diffUTCTime ::11,12
diffUTCTime a12,13

./Data/Time/Clock/Scale.hs,410
module Data.Time.Clock.Scale3,4
newtype UniversalTime =24,25
newtype UniversalTime = ModJulianDate {getModJulianDate24,25
newtype UniversalTime = ModJulianDate {getModJulianDate :: Rational}24,25
instance NFData33,34
newtype DiffTime =42,43
newtype DiffTime = MkDiffTime Pico42,43
secondsToDiffTime ::102,103
secondsToDiffTime =103,104
picosecondsToDiffTime ::106,107
picosecondsToDiffTime x107,108

./Data/Time.hs,21
module Data.Time0,1

./test/LongWeekYears.hs,129
module Main where2,3
longYear ::7,8
longYear year8,9
showLongYear ::12,13
showLongYear year13,14
main ::15,16
main =16,17

./test/ShowDST.hs,252
module Main where2,3
monthBeginning ::6,7
monthBeginning zone7,8
findTransition ::10,11
findTransition a11,12
showZoneTime ::21,22
showZoneTime zone22,23
showTransition ::24,25
showTransition (time,zone1,zone2)25,26
main ::27,28
main =28,29

./test/ConvertBack.hs,153
module Main where2,3
checkDay ::9,10
checkDay encodeDay10,11
checkers ::22,23
checkers =23,24
days ::30,31
days =31,32
main ::34,35
main =35,36

./test/TestFormat.hs,1020
module Main where2,3
withBuffer ::22,23
withBuffer n23,24
unixFormatTime ::28,29
unixFormatTime fmt29,30
locale ::38,39
locale =39,40
zones ::41,42
zones =42,43
baseTime0 ::44,45
baseTime0 =45,46
baseTime1 ::47,48
baseTime1 =48,49
getDay ::50,51
getDay day51,52
getYearP1 ::53,54
getYearP1 year54,55
getYearP2 ::56,57
getYearP2 year57,58
getYearP3 ::59,60
getYearP3 year60,61
getYearP4 ::62,63
getYearP4 year63,64
times ::65,66
times =66,67
compareFormat ::69,70
compareFormat modUnix70,71
chars ::82,83
chars =83,84
modifiers ::86,87
modifiers =87,88
formats ::89,90
formats =90,91
hashformats ::93,94
hashformats =94,95
somestrings ::96,97
somestrings =97,98
getBottom ::99,100
getBottom a100,101
safeString ::102,103
safeString s103,104
compareExpected ::117,118
compareExpected ts118,119
class (ParseTime t) => TestParse t where130,131
    expectedParse ::131,132
    expectedParse "%Z"132,133
checkParse ::145,146
checkParse fmt146,147
main ::153,154
main =154,155

./test/TestParseTime.hs,3147
class RunTest p17,18
    runTest ::18,19
instance RunTest20,21
data ExhaustiveTest =26,27
data ExhaustiveTest = forall t.26,27
ntest ::35,36
ntest =36,37
main ::38,39
main =39,40
days2011 ::48,49
days2011 =49,50
extests ::51,52
extests =52,53
parseYMD ::63,64
parseYMD day64,65
parseYearDayD ::67,68
parseYearDayD day68,69
parseYearDayE ::71,72
parseYearDayE day72,73
expectedYear ::76,77
expectedYear i77,78
show2 ::80,81
show2 i81,82
parseYY ::83,84
parseYY i84,85
parseCYY ::86,87
parseCYY c87,88
checkAll ::89,90
checkAll ps90,91
trMessage ::92,93
trMessage (TestOk93,94
trGood ::98,99
trGood (TestOk99,100
checkOne ::102,103
checkOne (n,p)103,104
parse ::113,114
parse f114,115
format ::116,117
format f117,118
test_parse_format ::162,163
test_parse_format f163,164
prop_read_show ::169,170
prop_read_show t170,171
prop_parse_showWeekDate ::176,177
prop_parse_showWeekDate d177,178
prop_parse_showGregorian ::179,180
prop_parse_showGregorian d180,181
prop_parse_showOrdinalDate ::182,183
prop_parse_showOrdinalDate d183,184
prop_fromMondayStartWeek ::189,190
prop_fromMondayStartWeek d190,191
prop_fromSundayStartWeek ::195,196
prop_fromSundayStartWeek d196,197
prop_named ::206,207
prop_named name208,209
prop_parse_format ::210,211
prop_parse_format (FormatString211,212
prop_parse_format_named ::213,214
prop_parse_format_named =215,216
prop_parse_format_upper ::218,219
prop_parse_format_upper (FormatString219,220
prop_parse_format_upper_named ::221,222
prop_parse_format_upper_named =223,224
prop_parse_format_lower ::226,227
prop_parse_format_lower (FormatString227,228
prop_parse_format_lower_named ::229,230
prop_parse_format_lower_named =231,232
prop_format_parse_format ::233,234
prop_format_parse_format (FormatString234,235
prop_format_parse_format_named ::237,238
prop_format_parse_format_named =239,240
newtype Input =245,246
newtype Input = Input String245,246
prop_no_crash_bad_input ::256,257
prop_no_crash_bad_input fs@(FormatString257,258
prop_no_crash_bad_input_named ::262,263
prop_no_crash_bad_input_named =264,265
newtype FormatString a270,271
newtype FormatString a = FormatString String270,271
formatType ::272,273
formatType _273,274
castFormatString ::275,276
castFormatString (FormatString276,277
type NamedProperty =281,282
properties ::283,284
properties =284,285
dayFormats ::333,334
dayFormats =334,335
timeOfDayFormats ::351,352
timeOfDayFormats =352,353
localTimeFormats ::362,363
localTimeFormats =363,364
timeZoneFormats ::371,372
timeZoneFormats =372,373
zonedTimeFormats ::374,375
zonedTimeFormats =375,376
utcTimeFormats ::379,380
utcTimeFormats =380,381
partialDayFormats ::387,388
partialDayFormats =388,389
partialTimeOfDayFormats ::391,392
partialTimeOfDayFormats =392,393
partialLocalTimeFormats ::395,396
partialLocalTimeFormats =396,397
partialZonedTimeFormats ::402,403
partialZonedTimeFormats =403,404
partialUTCTimeFormats ::411,412
partialUTCTimeFormats =412,413
knownFailures ::425,426
knownFailures =426,427
failingPartialDayFormats ::429,430
failingPartialDayFormats =430,431

./test/AddDays.hs,186
module Main where2,3
days ::[Day]6,7
days =7,8
increments ::18,19
increments =19,20
adders ::21,22
adders =22,23
resultDays ::31,32
resultDays =32,33
main ::38,39
main =39,40

./test/TestParseDAT.hs,153
module Main where2,3
hSafeGetContents ::8,9
hSafeGetContents h9,10
tods ::18,19
tods =19,20
times ::40,41
times =41,42
main ::48,49
main =49,50

./test/CurrentTime.hs,45
module Main where2,3
main ::6,7
main =7,8

./test/TestEaster.hs,119
module Main where2,3
days ::10,11
days =11,12
showWithWDay ::13,14
showWithWDay =14,15
main ::16,17
main =17,18

./test/TestTime.hs,484
module Main where2,3
showCal ::8,9
showCal mjd9,10
testCal ::16,17
testCal =17,18
showUTCTime ::43,44
showUTCTime (UTCTime44,45
myzone ::46,47
myzone =47,48
leapSec1998Cal ::49,50
leapSec1998Cal =50,51
leapSec1998 ::52,53
leapSec1998 =53,54
testUTC ::55,56
testUTC =56,57
neglong ::66,67
neglong =67,68
poslong ::69,70
poslong =70,71
testUT1 ::72,73
testUT1 =73,74
testTimeOfDayToDayFraction ::82,83
testTimeOfDayToDayFraction =83,84
main ::91,92
main =92,93

./test/ClipDates.hs,209
module Main where2,3
checkYearAndDay ::9,10
checkYearAndDay (y,d)10,11
checkGregorian ::12,13
checkGregorian (y,m,d)13,14
checkISOWeekDay ::15,16
checkISOWeekDay (y,w,d)16,17
main ::18,19
main =19,20

./test/TestMonthDay.hs,87
module Main where2,3
showCompare ::6,7
showCompare a17,8
main ::10,11
main =11,12

./test/TimeZone.hs,45
module Main where2,3
main ::6,7
main =7,8

./test/TestCalendars.hs,106
module Main where2,3
showers ::8,9
showers =9,10
days ::16,17
days =17,18
main ::24,25
main =25,26
